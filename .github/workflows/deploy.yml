name: Run Deploy
on:
  pull_request:
    types:
      - closed

jobs:
  run_deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}

      - name: Check Dependency Cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: ${{runner.os}}-node-${{hashFiles('./yarn.lock')}}

      - name: Install Dependencies
        run: yarn

      - name: Run ESLint and Prettier
        run: yarn lint

      - name: Run Build
        run: yarn build

      - name: Update Version
        run: |
          git config --global user.email "${{ secrets.USER_EMAIL }}"
          git config --global user.name "${{ secrets.USER_NAME }}"
          yarn version --patch
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo $VERSION > version.txt

      - name: Read Version from File
        id: read_version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
        
      - name: Create Git Tag
        run: git tag -f v${{ env.VERSION }}

      - name: Push Git Tag
        run: git push origin v${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false